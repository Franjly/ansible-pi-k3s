---
- name: Create group "{{ user }}"
  become: yes
  group:
    name: '{{ user }}'
    state: present
    gid: '{{ gid }}'

- name: Create user "{{ user }}"
  become: yes
  user:
    name: '{{ user }}'
    state: present
    password: '{{ passwd }}'
    uid: '{{ uid }}'
    groups: "{{ user }},adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,input,render,netdev,gpio,i2c,spi"
    shell: /bin/bash
    expires: -1

- name: Add users "{{ user }}" to passwordless sudoers.
  become: yes
  lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ user }}'
    line: '{{ user }} ALL=(ALL) NOPASSWD: ALL'
    state: present
    validate: 'visudo -cf %s'

- name: Check /etc/lightdm/ exist
  become: yes
  file:
    path: /etc/lightdm/
    state: directory
    owner: root
    group: root

- name: Set "{{ user }}" as default autologin user
  become: yes
  copy:
    dest: /etc/lightdm/lightdm.conf
    content: 'autologin-user={{ user }}'

- name: Set "{{ user }}" as default autologin user
  become: yes
  copy:
    dest: /etc/systemd/system/getty@tty1.service.d/autologin.conf
    content: |
      [Service]
      ExecStart=
      ExecStart=-/sbin/agetty --autologin {{ user }} --noclear %I $TERM
      EOF

- name: Get destination user state
  user:
    name: "{{ user }}"
  register: destination_user_data

- name: user | switch current user to {{ user }}
  set_fact:
    current_user: "{{ ansible_user }}"
    ansible_user: "{{ user }}"
  when: destination_user_data.state == "present"

- name: user | remove current user ({{ current_user }}) if it's not "{{ user }}"
  become: yes
  user:
    name: "{{ current_user }}"
    state: absent
    remove: yes
    force: yes
  when: destination_user_data.state == "present" and current_user != user

- name: Reboot
  become: yes
  reboot:
