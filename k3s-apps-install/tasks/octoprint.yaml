---
- name: Create "{{ apps.octoprint.namespace }}" namespace
  k8s:
    name: "{{ apps.octoprint.namespace }}"
    kind: Namespace
    state: present
  delegate_to: localhost

- name: Pause 3 minutes before restore octoprint volume backup
  pause:
    minutes: 3

- name: Get list of octoprint volume backups
  uri:
    url: "{{ apps.longhorn.base_url }}/v1/backupvolumes/{{ apps.octoprint.volume_name }}?action=backupList"
    method: POST
    validate_certs: false
  register: backup_list
  delegate_to: localhost
  run_once: true

  # Get latest backup
- set_fact:
    backup_id: "{{ backup_list | json_query('json.data[*].{created: created, id: id}') | sort(attribute='created') | reverse | json_query('[0].id') }}"

- name: Restore octoprint volume backup from longhorn
  uri:
    url: "{{ apps.longhorn.base_url }}/v1/volumes"
    method: POST
    body: '{"name":"{{ apps.octoprint.volume_name }}","numberOfReplicas":3,"accessMode":"rwo","encrypted":false,"nodeSelector":[],"diskSelector":[],"fromBackup":"s3://longhorn-backups@us-east-1/?backup={{ backup_id }}&volume={{ apps.octoprint.volume_name }}","staleReplicaTimeout":20}'
    body_format: json
    validate_certs: false
  delegate_to: localhost

- name: Pause 1 minutes to restore octoprint volume backup
  pause:
    minutes: 1

- name: Create PV octoprint
  uri:
    url: "{{ apps.longhorn.base_url }}/v1/volumes/{{ apps.octoprint.volume_name }}?action=pvCreate"
    method: POST
    body: '{"pvName":"{{ apps.octoprint.volume_name }}","fsType":"ext4"}'
    body_format: json
    validate_certs: false
  delegate_to: localhost

- name: Create PVC octoprint
  uri:
    url: "{{ apps.longhorn.base_url }}/v1/volumes/{{ apps.octoprint.volume_name }}?action=pvcCreate"
    method: POST
    body: '{"namespace":"{{ apps.octoprint.namespace }}","pvcName":"{{ apps.octoprint.pvc_name }}"}'
    body_format: json
    validate_certs: false
  delegate_to: localhost

- name: Deploy Octoprint
  k8s:
    state: present
    src: "{{ item }}"
  with_items:
    - '{{playbook_dir}}/k3s-apps-install/files/argocd-homelab-pi-k3s/apps/octoprint/project/octoprint.yaml'
    - '{{playbook_dir}}/k3s-apps-install/files/argocd-homelab-pi-k3s/apps/octoprint/application/octoprint.yaml'
  delegate_to: localhost

- name: Pause 1 minutes to deploy Octoprint
  pause:
    minutes: 1

- name: Wait for Octoprint pod to be running
  shell: kubectl get pods -n octoprint -o json
  register: kubectl_get_pods_octoprint
  until: kubectl_get_pods_octoprint.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  delegate_to: localhost
  retries: 10
  delay: 30